from distutils.fancy_getopt import fancy_getopt
import matplotlib.pyplot as plt

#Init.
intervals = ["EO", "EC", "Non-Stim1", "Non-Stim2", "Non-Stim3", "Non-Stim4", "Non-Stim5", "Non-Stim6", "Stim1", "Stim2", "Stim3", "Stim4", "Stim5", "Stim6"]
participant_info =  ["21A1",   "21A1f",  "21A2",   "21A2f",  "21A3",   "21A4",   "21A4f", "21B1", "21B2", "21B3", "21B4"]
participant_color = ["#ed1d1d", "#ffcd09", "#f04141", "#ffd944", "#f26565", "#f58989", "#ffe16b", "#1d85ed", "#4198f0", "#65acf2", "#89bff5"]

channel = ["TEMP", "BR", "GSR", "RRMED", "RRIQR", "SDNN", "RMSSD", "LF", "HF"]
unit = ["[°C]", "[BPM]", "[µS]", "", "", "", "", "%", "%"]
yrange = [[32,40], [0, 45], [0,9], [0,5], [0,3], [0,200], [0,100], [0,100], [0,100]]

#Get data from txt
'''
raw data are coppy+pasted from excel file.

Architecture
_____________________________________
PARTICIPANT1
    LIST OF TEM OF PARTICIPANT1
        DATA_TEM from 0min.~5min.
        DATA_TEM from 5min.~10min.
        DATA_TEM from 10min.~15min.
        ...
    LIST OF BR OF PARTICIPANT1
        DATA_BR from 0min.~5min.
        DATA_BR from 5min.~10min.
        DATA_BR from 10min.~15min.
        ...
    LIST GSR OF PARTICIPANT1
        DATA_GSR from 0min.~5min.
        DATA_GSR from 5min.~10min.
        DATA_GSR from 10min.~15min.
        ...

PARTICIPANT2
    LIST OF TEM OF PARTICIPANT2
        DATA_TEM from 0min.~5min.
        DATA_TEM from 5min.~10min.
        DATA_TEM from 10min.~15min.
        ...
    ...
...
_____________________________________

Each value represents the average of 5 min. intervals of each interventions
'''

raw_A = [
    ###21A1
    [
        ###TEM
        '''37.16430418
37.28079169
37.3862091
37.5100541
37.61471513
37.69984
37.75823462
37.8449397
37.95466182
37.99480557
38.00447717
38.01989541
38.06983435
38.09991982'''.split('\n'),
        ###BR
        '''15.99642795
15.80061671
16.53077425
16.28835683
20.1526427
26.71359765
21.25671318
24.43712713
20.84292337
23.10673991
21.43317953
14.66926473
20.4583972
15.70809627'''.split('\n'),
        ###GSR
        '''1.950111327
1.491068594
2.446926794
1.435556197
1.439189972
1.415318643
1.365882754
1.355026914
1.368129557
1.291911777
1.339624674
1.33155083
1.344944398
1.378467106'''.split('\n'),
        ###rrHRV median
        '''1.76
1.56
1.39
1.76
1.34
1.35
1.21
0.92
1.23
1.2
1.19
1.34
0.86
1.23'''.split('\n'),
        ###rrHRV IQR
        '''1.45
1.03
0.97
1.23
1
1.06
0.79
0.78
0.79
0.8
0.88
1.48
1.62
1.42'''.split('\n'),
        ###SDNN
        '''29.7
31.5
21.6
21.5
24.4
18.5
17.9
12.1
20.3
16.4
16.3
31.8
279
276.2'''.split('\n'),
        ###RMSSD
        '''11.4
14.8
8.7
9.8
7.6
7.2
6.5
5.6
6
5.9
6.3
10.2
6.4
40.3'''.split('\n'),
        ###LF
        '''78.9
nan
68.8
81
84.8
nan
nan
79.4
82.1
86.2
86.9
94.2
nan
nan'''.split('\n'),
        ###HF
        '''21.1
nan
31.2
19
15.2
nan
nan
20.6
17.9
13.8
13.1
5.8
nan
nan'''.split('\n'),

    ],
    ###21A1f
    [
        ###TEM
        '''35.31881929
35.58569609
35.84057665
36.05481327
36.25987714
36.42337838
36.60497762
36.72176747
36.78984
36.93953139
36.99906
36.99906
36.99906
37.03076521'''.split('\n'),
        ###BR
        '''15.91786849
19.19144806
18.78078456
18.090406
18.24606403
18.00634344
17.11267412
16.43121205
16.04378873
14.39049394
14.18908061
14.54399683
13.54535883
13.1202484'''.split('\n'),
        ###GSR
        '''1.079119345
1.068874312
1.077962747
1.198922576
1.425350265
1.205756481
1.175936779
1.154378425
1.862480243
2.168139416
1.487223997
1.534052085
4.818012114
5.834591247'''.split('\n'),
        ##rrHRV median
        '''7.01
6.8
5.38
4.39
4.38
5.16
5.26
5.16
4.57
4.58
4.43
4.48
4.2
4.2'''.split('\n'),
        ###rrHRV IQR
        '''5.98
4.35
4.57
3.61
4.05
3.71
3.73
3.82
3.74
2.8
2.64
2.57
2.89
2.9'''.split('\n'),
        ###SDNN
        '''54.9
48.3
46.7
49.3
40.4
34.7
47.2
43.8
45.6
38.1
37.4
38.2
36.2
42.1'''.split('\n'),
        ###RMSSD
        '''48.2
46.2
42.4
37.2
36.5
36.5
36.8
35.7
33.1
31
32
30.3
28.8
30.6'''.split('\n'),
        ###LF
        '''29.4
23.6
40.5
41
37.3
13.8
18.8
18.3
32.3
17.5
29.4
21.8
25.3
31'''.split('\n'),
        ###HF
        '''70.6
76.4
59.5
59
62.7
86.2
81.2
81.7
67.7
82.5
70.6
78.2
74.7
69'''.split('\n')
    ],
    ###21A2
    [
        ###TEM
        '''36.03146741
36.26590299
36.40159564
36.53858457
36.68850241
36.70306536
36.75006981
36.77085934
36.74554943
36.71300879
36.69945
36.69447246
36.67556306
36.63043551'''.split('\n'),
        ###BR
        '''11.78704632
12.75777115
11.23612997
11.38215684
11.24349437
10.68858342
10.81457431
10.77029587
10.45418246
10.52860643
10.44247392
10.67427986
10.43385835
10.98265256'''.split('\n'),
        ###GSR
        '''0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375'''.split('\n'),
        ###rrHRV median
        '''2.85
2.52
2.61
2.68
2.85
2.75
2.87
2.72
2.68
2.83
2.7
2.56
2.76
2.57'''.split('\n'),
        ###rrHRV IQR
        '''1.91
1.98
1.99
1.95
1.95
1.91
1.83
2.08
1.94
1.84
1.87
1.84
1.94
1.85'''.split('\n'),
        ###SDNN
        '''60.1
345.6
177
91.7
28.6
25.8
32.7
30.8
22.8
28.7
21.4
25.8
24.3
31.2'''.split('\n'),
        ###RMSSD
        '''29.1
91.5
57.3
30.5
22.3
20.3
21.7
24.8
20.5
21.5
20.1
20.1
20.6
19.5'''.split('\n'),
        ###LF
        '''nan
nan
nan
nan
30.9
22.2
nan
40.7
24
nan
nan
nan
27.7
41.2'''.split('\n'),
        ###HF
        '''nan
nan
nan
nan
69.1
77.8
nan
59.3
76
nan
nan
nan
72.3
58.8'''.split('\n')
    ],
    ###21A2f
    [
        ###TEM
        '''37.12117473
37.2187244
37.28501079
37.29684219
37.39922
37.45117007
37.49977
37.49977
37.49977
37.49977
37.51469982
37.49977
37.53128708
37.58114007'''.split('\n'),
        ###BR
        '''14.54269694
15.05739886
14.66590384
15.25670918
15.34148609
16.10552832
15.55061615
15.94003421
15.00102563
15.2070593
16.142586
15.25194982
14.76162861
15.70077029'''.split('\n'),
        ###GSR
        '''0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.984190591'''.split('\n'),
        ###rrHRV median
        '''3.39
2.9
2.84
2.81
2.74
2.86
2.57
2.8
2.77
2.8
3.03
3.58
2.78
2.13'''.split('\n'),
        ###rrHRV IQR
        '''1.76
1.6
1.47
1.77
1.52
1.67
1.83
2.07
1.68
2.09
2.37
3.04
2.23
1.67'''.split('\n'),
        ###SDNN
        '''23.4
24.5
25
27.6
26
24.7
25.1
24.6
33.4
23.9
33.8
25.8
36.8
31.8'''.split('\n'),
        ###RMSSD
        '''19.7
17.4
17.3
17.6
16.9
17.8
15.9
17.6
17.5
18.6
20.4
22.7
18.4
14.5'''.split('\n'),
        ###LF
        '''NaN
40.7
NaN
36.6
42.8
NaN
40.4
40.9
39.3
32.8
NaN
21.8
49.5
NaN'''.split('\n'),
        ###HF
        '''NaN
59.3
NaN
63.4
57.2
NaN
59.6
59.1
60.7
67.2
NaN
68.2
50.5
NaN'''.split('\n')
    ],
    ###21A3
    [
        ###TEM
        '''37.65392917
37.69984
37.69984
37.67504044
37.63448933
37.63917958
37.659624
37.66967735
37.69984
37.69984
37.69984
37.69984
37.69984
37.69984'''.split('\n'),
        ###BR
        '''31.35314965
27.52423572
28.24048176
29.60371862
29.05611628
27.98738851
25.72156225
30.44250098
27.85160342
32.25667373
27.77910219
27.98224125
31.26554631
27.11240699'''.split('\n'),
        ###GSR
        '''1.832458577
1.653187023
1.313316415
1.09941193
1.178387338
1.128713426
1.207816794
1.14929102
2.387954379
2.550878477
3.814182093
5.509738277
5.649372616
6.554700499'''.split('\n'),
        ###rrHRV median
        '''0.78
0.79
0.74
0.72
0.74
0.91
0.85
0.67
1.81
0.84
0.84
0.82
0.6
0.82'''.split('\n'),
        ###rrHRV IQR
        '''0.42
0.63
0.37
0.32
0.34
0.68
0.87
0.65
0.86
0.62
0.61
0.59
0.62
0.69'''.split('\n'),
        ###SDNN
        '''13.7
14.6
10
4.9
9.5
21.2
16
12.5
36.5
5.8
9.9
8
11.4
11.2'''.split('\n'),
        ###RMSSD
        '''19.9
22.1
10.9
3.9
10.2
25.8
25.2
12.3
61.3
4.4
13.7
4.3
4.5
5.1'''.split('\n'),
        ###LF
        '''nan
nan
62.4
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan'''.split('\n'),
        ###HF
        '''nan
nan
37.6
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan'''.split('\n')
    ],
    # ###21A3f
    # [
    #     ###TEM
    #     ''''''.split('\n'),
    #     ###BR
    #     ''''''.split('\n'),
    #     ###GSR
    #     ''''''.split('\n'),
        # ###rrHRV median
        # ''''''.split('\n'),
        # ###rrHRV IQR
        # ''''''.split('\n'),
        # ###SDNN
        # ''''''.split('\n'),
        # ###RMSSD
        # ''''''.split('\n'),
        # ###LF
        # ''''''.split('\n'),
        # ###HF
        # ''''''.split('\n')
    # ],
    ###21A4
    [
        ###TEM
        '''35.52134018
36.0563509
36.34355398
36.51753033
36.66723431
36.72295105
36.78441578
36.811778
36.88198074
36.88856171
36.89953
36.89953
36.88307614
36.89953'''.split('\n'),
        ###BR
        '''11.70576014
12.54263848
11.79234304
12.40975685
11.27078714
12.44255417
12.46948482
11.94205204
12.70941044
11.76267033
12.05376177
12.535608
12.26810136
13.25347424'''.split('\n'),
        ###GSR
        '''1.983687477
1.648248519
1.448092956
1.000306933
0.9359375
0.9359375
0.9359375
0.9359375
1.993229962
2.337477192
1.962413634
1.599753975
1.426630993
1.54960999'''.split('\n'),
        ###rrHRV median
        '''3.62
3.44
1.74
2.28
2.84
2.79
2.44
2.88
2.87
2.73
2.6
2.47
2.05
2.72'''.split('\n'),
        ###rrHRV IQR
        '''1.65
1.7
1.06
1.38
1.56
1.72
1.29
1.45
1.37
1.52
1.61
1.38
1.33
1.81'''.split('\n'),
        ###SDNN
        '''29.4
28.2
28.7
31.5
29.1
34.8
26.6
24.6
31.1
32.3
34.3
31
35
33.5'''.split('\n'),
        ###RMSSD
        '''23.7
22.6
15.4
17.4
19.3
19.6
16.5
20.2
25.8
19.7
18.8
17.9
15.3
19'''.split('\n'),
        ###LF
        '''15.7
17.5
45
31
28.4
36.1
27.7
28
nan
37
46.7
30.9
41.4
33.1'''.split('\n'),
        ###HF
        '''84.3
82.5
55
69
71.6
63.9
72.3
72
nan
63
53.3
69.1
58.6
66.9'''.split('\n')
    ],
    ###21A4f
    [
        ###TEM
        '''34.07138563
34.45156767
34.82894705
35.11769591
35.33789495
35.47080918
35.67218735
35.74218437
35.94740348
36.04746518
36.17764913
36.25607366
36.28914
36.29463247'''.split('\n'),
        ###BR
        '''10.63606397
11.13095019
11.87717885
11.68937095
12.15286676
12.05735711
11.31241025
10.67951523
12.00892086
12.40328439
12.19114777
12.59721439
12.39184391
12.9591345'''.split('\n'),
        ###GSR
        '''0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375
0.9359375'''.split('\n'),
        ###rrHRV median
        '''7
4.64
5
5.06
4.68
4.36
4.2
3.85'''.split('\n'), # stimulus period is absent in data or hrvtool had some probs i dunno:(
        ###rrHRV IQR
        '''5.48
4.29
4.15
3.64
3.41
2.66
2.94
2.54'''.split('\n'), # same here
        ###SDNN
        '''52.1
47.5
41.7
43.6
43.9
38.3
40.1
34.1'''.split('\n'), # same here
        ###RMSSD
        '''47.5
39.7
37.8
35.3
33.2
30.6
29.9
26.6'''.split('\n'), # same here
        ###LF
        '''25.2
42.3
26.3
15.7
26.8
26.2
29
27'''.split('\n'), # same here :()
        ###HF
        '''74.8
57.7
73.7
84.3
73.2
73.8
71
73'''.split('\n') # saaaamee hereee
    ],
]

raw_B = [
    ###21B1
    [
        ###TEM
        '''35.48158359
35.73914368
36.23194072
36.41154929
36.58383174
36.71201356
36.78441695
36.82165089
36.89953
36.89953
36.89953
36.89953'''.split('\n'),
        ###BR
        '''17.97741033
17.76969685
18.09903408
19.15824
18.89493221
18.59194691
16.78138004
15.91786061
17.00504945
16.73311793
17.14383738
16.17083133'''.split('\n'),
        ###GSR
        '''1.125205845
0.954440083
1.82283558
1.920647069
1.928732736
1.933504287
2.336656851
1.958056166
1.7474016
1.969346566
2.456513307
2.336805532'''.split('\n'),
        ###rrHRV median
        '''2.89
2.31
2.59
2.05
2.09
2.08
2.06
2.48
2.59
2.38
2.55
2.33
2.15
1.83'''.split('\n'),
        ###rrHRV IQR
        '''1.44
1.47
1.36
1.55
1.37
1.46
1.4
1.65
1.85
1.76
1.6
1.57
1.57
1.19'''.split('\n'),
        ###SDNN
        '''23.6
31.3
26.3
30.7
43.7
26.6
26.9
22.3
42.9
40
42.6
29.9
37.9
37.4'''.split('\n'),
        ###RMSSD
        '''17.3
15.3
15.6
13.1
14.4
13.8
13.7
14.9
16.7
15.9
16.8
15.5
13.8
13.6'''.split('\n'),
        ###LF
        '''35.1
66.5
nan
70.8
64.8
70
54
48.8
59.1
78.3
68.7
73
71.3
81.9'''.split('\n'),
        ###HF
        '''64.9
33.5
nan
29.2
35.2
30
46
51.2
40.9
21.7
31.3
27
28.7
18.1'''.split('\n')
    ],
    ###21B2
    [
        ###TEM
        '''35.18888783
35.31718964
35.53750992
35.68284717
35.81979845
35.9722055
36.06206326
36.13206681
36.21555767
36.28467179
36.28914
36.36404886
36.39984
36.40746987'''.split('\n'),
        ###BR
        '''15.88398902
14.2825845
13.81376236
14.83148445
14.14280952
14.18127268
14.3191416
14.7224527
14.61134793
15.31111319
13.60883253
13.85666438
14.32342874
13.22204158'''.split('\n'),
        ###GSR
        '''1.036291111
1.039655623
1.023721063
1.01493828
1.008517493
0.986203454
0.960940429
0.961507736
0.984731361
0.970988522
0.978844866
1.012655681
0.992694121
0.971676136'''.split('\n'),
        ###rrHRV median
        '''1.12
2.14
2.23
1.76
1.73
2.03
2.09
1.6
1.47
1.58
1.17
1.14
1.53
1.41'''.split('\n'),
        ###rrHRV IQR
        '''0.88
2
1.61
1.36
1.5
1.61
1.59
1.33
1.12
1.25
1.08
0.94
1
0.83'''.split('\n'),
        ###SDNN
        '''15
18.1
18.6
21
28
24.7
26.2
21
22
21.1
22.6
22.8
20.2
21.7'''.split('\n'),
        ###RMSSD
        '''7.9
13.8
14.8
11.7
12.1
12.4
12.5
11
10.7
11.3
8.3
8.8
9.6
8.8'''.split('\n'),
        ###LF
        '''56.1
38.7
49.9
55.8
67.6
59.1
56
nan
48.9
38.8
64
67
65.7
65.7'''.split('\n'),
        ###HF
        '''43.9
61.3
50.1
44.2
32.4
40.9
44
nan
51.1
61.2
36
33
34.3
34.3'''.split('\n')
    ],
    ###21B3
    [
        ###TEM
        '''35.52952661
35.6688699
35.77359874
35.84429429
35.97924616
35.99969
36.06405114
36.09922
36.09922
36.11899616
36.11463666
36.11430302
36.09922
36.11448361'''.split('\n'),
        ###BR
        '''16.81566236
20.51344138
21.75240236
19.94269044
17.5421491
14.75199461
17.63312223
15.76318639
16.73815925
19.99483096
16.91861134
16.39178808
17.85801726
17.91904421'''.split('\n'),
        ###GSR
        '''1.867410138
1.910535137
1.830990805
1.838122914
2.151350551
2.448962371
3.692082694
4.798014342
5.80951482
5.213240754
5.898500917
6.94900432
6.685923618
4.97137342'''.split('\n'),
        ###rrHRV median
        '''1.21
0.91
0.91
0.91
0.94
0.91
1.23
0.91
0.91
0.88
0.93
1.23
1.19
0.91'''.split('\n'),
        ###rrHRV IQR
        '''1.07
0.79
0.78
0.79
0.75
0.76
0.8
0.78
0.8
0.75
0.81
0.79
1.08
0.76'''.split('\n'),
        ###SDNN
        '''13.6
15.3
10
11.4
13.6
13
16.2
13.5
14.7
11.7
19.8
16.2
14.1
15.2'''.split('\n'),
        ###RMSSD
        '''7.3
5.9
5.6
5.7
5.5
5.4
5.9
5.8
5.9
4.8
6.7
6.2
6.7
5.9'''.split('\n'),
        ###LF
        '''68.1
68.2
73.7
78.4
80.5
74.8
nan
77.2
nan
82.4
84.2
85.9
80.8
77.3'''.split('\n'),
        ###HF
        '''31.9
31.8
26.3
21.6
19.5
25.2
nan
22.8
nan
17.6
15.8
14.1
19.2
22.7'''.split('\n')
    ],
    ###21B4
    [
        ###TEM
        '''34.71853073
34.83482004
34.96176217
35.10209694
35.09732925
35.08193974
35.19439382
35.17083863
35.12969835
35.11477112
35.09615246
35.07336454
35.1396507
35.13035551'''.split('\n'),
        ###BR
        '''12.82387333
14.17842886
15.02815059
14.86070886
15.28365036
17.58586216
14.5560039
14.83648485
15.8482777
16.88530484
16.5808871
16.50717886
15.97250829
16.24120273'''.split('\n'),
        ###GSR
        '''1.917129808
1.92677715
1.962096963
1.867365293
1.980643708
2.144556106
1.946623128
1.94451456
1.908201342
1.865203186
1.809263326
1.916870225
1.814992569
1.751270395'''.split('\n'),
        ###rrHRV median
        '''1.83
2.37
1.81
1.8
1.93
1.35
1.67
1.72
1.67
1.33
1.28
1.47
1.39'''.split('\n'),
        ###rrHRV IQR
        '''1.92
2.06
1.25
1.59
1.55
1.23
1.17
1.36
1.16
1.34
1.2
1.13
1.01'''.split('\n'),
        ###SDNN
        '''22.1
25.6
25.2
26.8
40
24.8
25.9
24.8
21.8
29.7
27.9
22.1
28.8'''.split('\n'),
        ###RMSSD
        '''24.9
28.2
27.4
24.3
17.9
10.5
13.4
10.7
16.2
17.4
15.2
9.3
8.4'''.split('\n'),
        ###LF
        '''nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan'''.split('\n'),
        ###HF
        '''nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan
nan'''.split('\n')
    ]
]

#Helper functions
def show(data_Array) :
    print('='*224)
    for participant in data_Array :
        for types in participant :
            for data in types :
                print(data, end=' \t| ')
            print()
        print('='*224)
    print()

def get_data(participant_number, data_type) :
    '''get list of data of participant what you want;
        data_type should be one of the val. in channel
    '''
    n = participant_info.index(participant_number)
    t = channel.index(data_type)

    if n < len(raw_A) : return [float('nan') if i == '' else float(i) for i in raw_A[n][t]]
    else : return [float('nan') if i == '' else float(i) for i in raw_B[n-len(raw_A)][t]]


#main
if __name__ == "__main__" :
    #show data first
    print('\n'*8)
    print("PROGRAM START ....")
    print()
    print('A PARTICIPANTS')
    show(raw_A)
    print('B PARTICIPANTS')
    show(raw_B)

    #Visualization
    fig, ax = plt.subplots(figsize = (15,7))
    
    #What to see
    #one of ["TEMP", "BR", "GSR", "RRMED", "RRIQR", "SDNN", "RMSSD", "LF", "HF"]
    data_type = "BR"
    #y axis range
    ax.set_ylim(yrange[channel.index(data_type)])
    #x, y units on axis
    ax.set_xlabel("time")
    ax.set_ylabel(unit[channel.index(data_type)])


    
    for i in range(len(participant_info)) :
        d = get_data(participant_info[i],data_type)
        #d[:-1] : 마지막 부분에 노이즈가 포함되어 있어 잘랐음
        ax.plot(intervals[0:len(d)-1], d[:-1], color=participant_color[i], marker = 'o', linestyle = '-', label=participant_info[i])
    
    legend = ax.legend(bbox_to_anchor=(1.09, 0.5), loc = "right")
    legend.get_frame().set_facecolor('white')

    plt.title(data_type)
    plt.show()